#!/usr/bin/env bash

set -eu

repo_dir="$(readlink -f "$(dirname "${BASH_SOURCE[0]}")/..")"

if [ -z "${out_dir:-}" ]; then
  if [ -n "${PACKAGES_PATH:-}" ]; then
    # concourse case
    out_dir="$(readlink -f "${repo_dir}/../${PACKAGES_PATH:-}/dist")"
  else
    # local case
    out_dir="${repo_dir}/dist}"
  fi
fi
mkdir -p "${out_dir}"

ocm_repo='europe-docker.pkg.dev/gardener-project/releases'
cc_utils_version="$(cat "${repo_dir}/CC_UTILS_VERSION")"
bdba_version="$(cat "${repo_dir}/BDBA_DEPENDENCY_VERSION")"

if ! which xz &>/dev/null; then
  apk add --no-cache xz
fi

# retrieve packages from cc-utils from OCM (prefer over publishing via PYPI)
for resource in gardener-cicd-libs gardener-oci gardener-ocm; do
  echo "downloading ${resource}:${cc_utils_version}"
  python -m ocm download resource \
    --ocm-repository "${ocm_repo}" \
    --component "github.com/gardener/cc-utils:${cc_utils_version}" \
    --name "${resource}" \
    | tar xJ -C"${out_dir}"
done

echo "downloading ${resource}:${bdba_version}"
python -m ocm download resource \
  --ocm-repository "${ocm_repo}" \
  --component "ocm.software/ocm-gear/bdba-client:${bdba_version}" \
  --name bdba \
  | tar xJ -C"${out_dir}"

cd "${repo_dir}"

# install build-only dependencies (no need to include in image)
pip3 install --upgrade pip wheel setuptools semver

# build into "${repo_dir}/dist"
python3 "${repo_dir}/setup.utils.py" bdist_wheel
rm -rf "${repo_dir}/build"
python3 "${repo_dir}/setup.service.py" bdist_wheel
rm -rf "${repo_dir}/build"
python3 "${repo_dir}/setup.extensions.py" bdist_wheel
rm -rf "${repo_dir}/build"
